# using jbod strategy as storage
# https://cwiki.apache.org/confluence/display/KAFKA/KIP-112%3A+Handle+disk+failure+for+JBOD
# https://github.com/jmxtrans/jmxtrans
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  # kafka cluster name
  name: edh
spec:
  kafka:
    # broker version
    version: 2.8.0
    # initial replicas
    replicas: 1
    # provision lbs
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
      - name: external
        port: 9094
        type: loadbalancer
        tls: false
    readinessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    livenessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    config:
      default.replication.factor: 1
      num.partitions: 1
      offsets.topic.replication.factor: 1
      transaction.state.log.replication.factor: 1
      transaction.state.log.min.isr: 1
      log.message.format.version: "2.8"
      inter.broker.protocol.version: "2.8"
      log.retention.hours: 2160
    storage:
      type: jbod
      volumes:
      - id: 0
        type: persistent-claim
        size: 40Gi
        deleteClaim: false
    # resource limitation
    # -xms -xmx set as same as resources [limit]
    resources:
      requests:
        memory: 2Gi
        cpu: "1000m"
      limits:
        memory: 3Gi
        cpu: "1500m"
  # zookeeper information
  zookeeper:
    replicas: 3
    storage:
        type: persistent-claim
        size: 5Gi
        deleteClaim: false
    resources:
      # requests and limits
      requests:
        memory: 256Mi
        cpu: "250m"
      limits:
        memory: 512Mi
        cpu: "500m"
  kafkaExporter:
    topicRegex: ".*"
    groupRegex: ".*"
